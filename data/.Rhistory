Sys.info()['sysname']
Sys.info()['sysname'] == 'Windows'
if (Sys.info()['sysname'] == 'Windows') {
setwd("D:\Documents\Courses\IODS\IODS-project\data")
} else {
setwd("/Users/otsopera/Documents/IODS/IODS-project/data")
}
if (Sys.info()['sysname'] == 'Windows') {
setwd("D:\Documents\Courses\IODS\IODS-project\data")
} else {
setwd("/Users/otsopera/Documents/IODS/IODS-project/data")
}
if (Sys.info()['sysname'] == 'Windows') {
setwd("D:\Documents\Courses\IODS\IODS-project\data")
} else {
setwd("/Users/otsopera/Documents/IODS/IODS-project/data")
}
Sys.info()['sysname'] == 'Windows'
setwd("D:\Documents\Courses\IODS\IODS-project\data")
setwd("D:/Documents/Courses/IODS/IODS-project/data")
if (Sys.info()['sysname'] == 'Windows') {
setwd("D:/Documents/Courses/IODS/IODS-project/data")
} else {
setwd("/Users/otsopera/Documents/IODS/IODS-project/data")
}
getwd()
rm(list = ls())
library(dplyr) # for data wrangling
install.packages("dplyr")
library(dplyr) # for data wrangling
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
names_hd = names(hd) # get names
names_hd[names_hd == "HDI.Rank"] <- "HDI_rank"
names_hd[names_hd == "Human.Development.Index..HDI."] <- "HDI"
names_hd[names_hd == "Life.Expectancy.at.Birth"] <- "life_exp_yrs"
names_hd[names_hd == "Expected.Years.of.Education"] <- "exp_edu_yrs"
names_hd[names_hd == "Mean.Years.of.Education"] <- "mean_edu_yrs"
names_hd[names_hd == "Gross.National.Income..GNI..per.Capita"] <- "GNI_per_capita"
names_hd[names_hd == "GNI.per.Capita.Rank.Minus.HDI.Rank"] <- "GNI_minus_HDI_ranks"
names(hd) = names_hd; # set names
names_gii = names(gii)
names_gii[names_gii == "GII.Rank"] <- "GII_rank"
names_gii[names_gii == "Gender.Inequality.Index..GII."] <- "GII"
names_gii[names_gii == "Maternal.Mortality.Ratio"] <- "maternal_mortality"
names_gii[names_gii == "Adolescent.Birth.Rate"] <- "adolescent_birth_rate"
names_gii[names_gii == "Percent.Representation.in.Parliament"] <- "parl_represent"
names_gii[names_gii == "Population.with.Secondary.Education..Female."] <- "sec_edu_women"
names_gii[names_gii == "Population.with.Secondary.Education..Male."] <- "sec_edu_men"
names_gii[names_gii == "Labour.Force.Participation.Rate..Female."] <- "labour_partic_women"
names_gii[names_gii == "Labour.Force.Participation.Rate..Male."] <- "labour_partic_men"
names(gii) = names_gii
gii <- mutate(gii, gender_ratio_sec_edu = sec_edu_women/sec_edu_men)
gii <- mutate(gii, gender_ratio_labour_force = labour_partic_women/labour_partic_men)
join_by <- c("Country")
human <- inner_join(gii, hd, by = join_by, suffix = c('.gii','.hd'))
write.table(human, file = "human.txt", row.names = F)
head(read.table("human.txt"))
library(stringr)
str(human$GNI)
install.packages("stringr")
library(stringr)
str(human$GNI)
str(human)
str(human$GNI_per_capita)
str(human$GNI_per_capita)
new_GNI <- as.numeric(str_replace(human$GNI, pattern=",", replace =""))
summary(new_GNI)
new_GNI <- as.numeric(str_replace(human$GNI_per_capita, pattern=",", replace =""))
summary(new_GNI)
human <- mutate(human, GNI_per_capita = as.numeric(str_replace(human$GNI_per_capita, pattern=",", replace ="")))
summary(human$GNI_per_capita)
if (Sys.info()['sysname'] == 'Windows') {
setwd("D:/Documents/Courses/IODS/IODS-project/data")
} else {
setwd("/Users/otsopera/Documents/IODS/IODS-project/data")
}
rm(list = ls())
library(dplyr) # for data wrangling
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
names_hd = names(hd) # get names
names_hd[names_hd == "HDI.Rank"] <- "HDI_rank"
names_hd[names_hd == "Human.Development.Index..HDI."] <- "HDI"
names_hd[names_hd == "Life.Expectancy.at.Birth"] <- "life_exp_yrs"
names_hd[names_hd == "Expected.Years.of.Education"] <- "exp_edu_yrs"
names_hd[names_hd == "Mean.Years.of.Education"] <- "mean_edu_yrs"
names_hd[names_hd == "Gross.National.Income..GNI..per.Capita"] <- "GNI"
names_hd[names_hd == "GNI.per.Capita.Rank.Minus.HDI.Rank"] <- "GNI_minus_HDI_ranks"
names(hd) = names_hd; # set names
names_gii = names(gii)
names_gii[names_gii == "GII.Rank"] <- "GII_rank"
names_gii[names_gii == "Gender.Inequality.Index..GII."] <- "GII"
names_gii[names_gii == "Maternal.Mortality.Ratio"] <- "maternal_mortality"
names_gii[names_gii == "Adolescent.Birth.Rate"] <- "adolescent_birth_rate"
names_gii[names_gii == "Percent.Representation.in.Parliament"] <- "parl_represent"
names_gii[names_gii == "Population.with.Secondary.Education..Female."] <- "sec_edu_women"
names_gii[names_gii == "Population.with.Secondary.Education..Male."] <- "sec_edu_men"
names_gii[names_gii == "Labour.Force.Participation.Rate..Female."] <- "labour_partic_women"
names_gii[names_gii == "Labour.Force.Participation.Rate..Male."] <- "labour_partic_men"
names(gii) = names_gii
gii <- mutate(gii, gender_ratio_sec_edu = sec_edu_women/sec_edu_men)
gii <- mutate(gii, gender_ratio_labour_force = labour_partic_women/labour_partic_men)
join_by <- c("Country")
human <- inner_join(gii, hd, by = join_by, suffix = c('.gii','.hd'))
write.table(human, file = "human.txt", row.names = F)
head(read.table("human.txt"))
library(stringr)
str(human$GNI)
human <- mutate(human, GNI = as.numeric(str_replace(human$GNI, pattern=",", replace ="")))
summary(human$GNI)
if (Sys.info()['sysname'] == 'Windows') {
setwd("D:/Documents/Courses/IODS/IODS-project/data")
} else {
setwd("/Users/otsopera/Documents/IODS/IODS-project/data")
}
rm(list = ls())
library(dplyr) # for data wrangling
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
names(hd)
names(gii)
rm(list = ls())
library(dplyr) # for data wrangling
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
dim(hd)
str(gii)
dim(gii)
names_hd = names(hd) # get names
names_hd[names_hd == "Human.Development.Index..HDI."] <- "HDI"
names_hd[names_hd == "Life.Expectancy.at.Birth"] <- "Life.Exp"
names_hd[names_hd == "Expected.Years.of.Education"] <- "Edu.Exp"
names_hd[names_hd == "Mean.Years.of.Education"] <- "Edu.Mean"
names_hd[names_hd == "Gross.National.Income..GNI..per.Capita"] <- "GNI"
names_hd[names_hd == "GNI.per.Capita.Rank.Minus.HDI.Rank"] <- "GNI.Minus.Rank"
names(hd) = names_hd; # set names
names_gii = names(gii)
names_gii[names_gii == "GII.Rank"] <- "GII.Rank"
names_gii[names_gii == "Gender.Inequality.Index..GII."] <- "GII"
names_gii[names_gii == "Maternal.Mortality.Ratio"] <- "Mat.Mor"
names_gii[names_gii == "Adolescent.Birth.Rate"] <- "Ado.Birth"
names_gii[names_gii == "Percent.Representation.in.Parliament"] <- "Parli.F"
names_gii[names_gii == "Population.with.Secondary.Education..Female."] <- "Edu2.F"
names_gii[names_gii == "Population.with.Secondary.Education..Male."] <- "Edu2.M"
names_gii[names_gii == "Labour.Force.Participation.Rate..Female."] <- "Labo.F"
names_gii[names_gii == "Labour.Force.Participation.Rate..Male."] <- "Labo.M"
names(gii) = names_gii
gii <- mutate(gii, Edu2.FM = Edu2.F/Edu2.M)
gii <- mutate(gii, Labo.FM = Labo.F/Labo.M)
join_by <- c("Country")
human <- inner_join(gii, hd, by = join_by, suffix = c('.gii','.hd'))
write.table(human, file = "human.txt", row.names = F)
head(read.table("human.txt"))
library(stringr)
str(human$GNI)
human <- mutate(human, GNI = as.numeric(str_replace(human$GNI, pattern=",", replace ="")))
summary(human$GNI)
names(human)
